{"version":3,"file":"populated-places.js","mappings":"oLASA,MAAMA,EAAkB,IAAI,IAAY,CACtCC,OAAQ,IAAI,IAAa,CACvBC,IAAK,2DACLC,OAAQ,IAAI,MAEdC,MAAO,CACL,sBAAuB,yBACvB,sBAAuB,IACvB,gBAAiB,CACf,cACA,CAAC,UACD,CAAC,MAAO,WACR,IACA,EACA,IACA,IAEF,oBAAqB,CACnB,cACA,CAAC,UACD,CAAC,MAAO,WACR,IACA,0BACA,IACA,2BAOAC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CACN,IAAI,IAAU,CACZL,OAAQ,IAAI,IAAI,CACdM,aACE,4LAEFL,IACE,iGACFM,QAAS,OAGbR,GAEFS,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIVP,EAAIQ,eAAe,IAAI,KAEvB,MAAMC,EAAOC,SAASC,eAAe,QAErC,IAAIC,EAAiB,KACrB,SAASC,EAAmBC,EAAOC,GACjC,MAAMC,EAAUhB,EAAIiB,mBAAmBH,GAAO,GAC9C,GAAIE,EAAS,CACX,MAAME,EAAelB,EAAImB,uBACvBH,EAAQI,cAAcC,kBAEpBH,EAAa,GAAKH,EACpBG,EAAa,GAAKA,EAAa,GAAKH,EAC3BG,EAAa,GAAKH,IAC3BG,EAAa,GAAKH,EAASG,EAAa,GAAKH,GAE/CN,EAAKV,MAAMuB,IAAMJ,EAAa,GAAK,KAC/BA,EAAa,GAAKH,EAAQ,GAC5BN,EAAKV,MAAMwB,KAAOL,EAAa,GAAK,KACpCT,EAAKV,MAAMyB,MAAQ,SAEnBf,EAAKV,MAAMyB,MAAQT,EAAQG,EAAa,GAAK,KAC7CT,EAAKV,MAAMwB,KAAO,QAEhBP,IAAYJ,IACdH,EAAKV,MAAM0B,WAAa,UACxBhB,EAAKiB,UACHV,EAAQW,IAAI,QAAU,OAASX,EAAQW,IAAI,WAAWC,iBAE5D,MAAWhB,IACTH,EAAKV,MAAM0B,WAAa,UAE1Bb,EAAiBI,CACnB,CAEAhB,EAAI6B,GAAG,eAAe,SAAUC,GAC9B,GAAIA,EAAIC,SAGN,OAFAtB,EAAKV,MAAM0B,WAAa,cACxBb,OAAiBoB,GAInBnB,EADcb,EAAIiC,cAAcH,EAAII,eACVJ,EAAIK,WAAWC,KAAK,GAChD,IAEApC,EAAI6B,GAAG,SAAS,SAAUC,GACxBjB,EAAmBiB,EAAIhB,MAAOgB,EAAIK,WAAWC,KAAK,GACpD,IAEApC,EAAIqC,mBAAmBC,iBAAiB,gBAAgB,WACtD1B,OAAiBoB,EACjBvB,EAAKV,MAAM0B,WAAa,QAC1B,G","sources":["webpack:///./populated-places.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Link from '../src/ol/interaction/Link.js';\nimport Map from '../src/ol/Map.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport XYZ from '../src/ol/source/XYZ.js';\n\nconst populatedPlaces = new VectorLayer({\n  source: new VectorSource({\n    url: 'https://openlayers.org/data/vector/populated-places.json',\n    format: new GeoJSON(),\n  }),\n  style: {\n    'circle-stroke-color': 'hsl(0 100% 100% / 0.9)',\n    'circle-stroke-width': 0.75,\n    'circle-radius': [\n      'interpolate',\n      ['linear'],\n      ['get', 'pop_max'],\n      500_000,\n      3,\n      10_000_000,\n      10,\n    ],\n    'circle-fill-color': [\n      'interpolate',\n      ['linear'],\n      ['get', 'pop_max'],\n      1_000_000,\n      'hsl(210 100% 40% / 0.9)',\n      10_000_000,\n      'hsl(0 80% 60% / 0.9)',\n    ],\n  },\n});\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new XYZ({\n        attributions:\n          '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n          '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>',\n        url:\n          'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\n        maxZoom: 20,\n      }),\n    }),\n    populatedPlaces,\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n  }),\n});\n\nmap.addInteraction(new Link());\n\nconst info = document.getElementById('info');\n\nlet currentFeature = null;\nfunction displayFeatureInfo(pixel, width) {\n  const feature = map.getFeaturesAtPixel(pixel)[0];\n  if (feature) {\n    const featurePixel = map.getPixelFromCoordinate(\n      feature.getGeometry().getCoordinates()\n    );\n    if (featurePixel[0] > width) {\n      featurePixel[0] = featurePixel[0] % width;\n    } else if (featurePixel[1] < width) {\n      featurePixel[0] = width + (featurePixel[0] % width);\n    }\n    info.style.top = featurePixel[1] + 'px';\n    if (featurePixel[0] < width / 2) {\n      info.style.left = featurePixel[0] + 'px';\n      info.style.right = 'auto';\n    } else {\n      info.style.right = width - featurePixel[0] + 'px';\n      info.style.left = 'auto';\n    }\n    if (feature !== currentFeature) {\n      info.style.visibility = 'visible';\n      info.innerHTML =\n        feature.get('name') + '<br>' + feature.get('pop_max').toLocaleString();\n    }\n  } else if (currentFeature) {\n    info.style.visibility = 'hidden';\n  }\n  currentFeature = feature;\n}\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    info.style.visibility = 'hidden';\n    currentFeature = undefined;\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel, evt.frameState.size[0]);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel, evt.frameState.size[0]);\n});\n\nmap.getTargetElement().addEventListener('pointerleave', function () {\n  currentFeature = undefined;\n  info.style.visibility = 'hidden';\n});\n"],"names":["populatedPlaces","source","url","format","style","map","layers","attributions","maxZoom","target","view","center","zoom","addInteraction","info","document","getElementById","currentFeature","displayFeatureInfo","pixel","width","feature","getFeaturesAtPixel","featurePixel","getPixelFromCoordinate","getGeometry","getCoordinates","top","left","right","visibility","innerHTML","get","toLocaleString","on","evt","dragging","undefined","getEventPixel","originalEvent","frameState","size","getTargetElement","addEventListener"],"sourceRoot":""}