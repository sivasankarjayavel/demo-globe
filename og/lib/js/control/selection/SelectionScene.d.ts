import { Entity } from '../../entity/Entity';
import { Events } from '../../Events';
import { Vector } from '../../layer/Vector';
import { RenderNode } from '../../scene/RenderNode';
declare class SelectionScene extends RenderNode {
    events: Events<string[]>;
    _ignoreTerrain: boolean;
    _onSelect: any;
    _autoSelectionHide: any;
    _planet: any;
    _startLonLat: any;
    _heading: number;
    _propsLabel: Entity;
    _trackEntity: Entity;
    _cornerEntity: Entity[];
    _trackLayer: Vector;
    _cornersLayer: Vector;
    _onMouseMove_: any;
    _onMouseLdown_: any;
    _onMouseLup_: any;
    _pickedCorner: any;
    _anchorLonLat: any;
    constructor(options?: {
        name?: string;
        ignoreTerrain?: boolean;
        onSelect?: any;
        autoSelectionHide?: boolean;
        planet?: any;
    });
    set ignoreTerrain(v: boolean);
    bindPlanet(planet: any): void;
    init(): void;
    onremove(): void;
    _activate(): void;
    _deactivate(): void;
    _onMouseLdown(e: any): void;
    _onMouseLup(e: any): void;
    _drawLine(startLonLat: any, endLonLat: any, startPos?: any): void;
    _onMouseMove(e: any): void;
    clear(): void;
    frame(): void;
    get ellipsoid(): any;
}
export { SelectionScene };
